###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off
from pydantic import BaseModel, ConfigDict
from typing import List, Optional, Union
from enum import Enum


from typing_extensions import TypeAlias, Literal, TypedDict
from typing import Dict, Generic, List, Optional, TypeVar, Union

from . import types
from .types import Checked, Check


T = TypeVar('T')
class StreamState(BaseModel, Generic[T]):
    value: T
    state: Literal["Pending", "Incomplete", "Complete"]

class Resume(BaseModel):
    name: Optional[str] = None
    email: Optional[str] = None
    experience: List['Experience']
    skills: List[str]

class Experience(BaseModel):
    company: Optional[str] = None
    title: Optional[str] = None
    start_date: Optional[str] = None
    end_date: Optional[str] = None

Resume.model_rebuild()
Experience.model_rebuild()

__all__ = ['Resume', 'Experience']
